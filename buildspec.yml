version: 0.2
env:
  variables:
    stacknames: "wow-api-db,wow-api-lambda"
    stackfiles: "wow-api-loot-table.yaml,wow-api-lambda.yaml"
phases:
  install:
    runtime-versions:
      java: corretto11
  build:
    commands:
      - | 
          IFS=',' read -r -a stacknamesArray <<< "${stacknames}"
          IFS=',' read -r -a stackfilesArray <<< "${stackfiles}"
          varCount=0
          for index in "${!stacknamesArray[@]}"
          do
            #echo "$index ${stacknamesArray[index]}"
            #echo "$index ${stackfilesArray[index]}"
            STACK_STATUS=$(aws cloudformation describe-stacks --stack-name ${stacknamesArray[index]} 2> /dev/null | jq .Stacks | jq .[0] | jq .StackStatus | xargs) 
            echo $STACK_STATUS
            if [ "ROLLBACK_COMPLETE" == "${STACK_STATUS}" ]; then
              echo stack is in ROLLBACK_COMPLETE delete it
              aws cloudformation delete-stack --stack-name ${stacknamesArray[index]}
              aws cloudformation wait stack-delete-complete --stack-name ${stacknamesArray[index]}
              aws cloudformation create-stack --stack-name ${stacknamesArray[index]} --template-body file://${stackfilesArray[index]}
            else            
              if [ "x" == "x${STACK_STATUS}" ]; then
                echo stack doesnt exist, create it
                aws cloudformation create-stack --stack-name ${stacknamesArray[index]} --template-body file://${stackfilesArray[index]}
              else
                stack exists but isnt rolled back,  update it
                aws cloudformation validate-template --template-body file://${stackfilesArray[index]}
                aws cloudformation update-stack --stack-name ${stacknamesArray[index]} --template-body file://${stackfilesArray[index]}
              fi
            fi
          varCount=$((varCount + 1))
          done
